name: logger-service

networks:
  ms-service:
    name: ms-service

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.2
    hostname: zookeeper
    container_name: zookeeper
    expose:
      - "2181"
    # ports:
    #   - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - ms-service
  broker:
    image: confluentinc/cp-kafka:7.6.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    expose:
      - "19092"
      - "9092"
    # ports:
    #   - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:19092,PLAINTEXT_HOST://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CREATE_TOPICS: "write-logs:1:1,app.createTodo:1:1"
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - ms-service
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.13.1
    container_name: filebeat
    command: -strict.perms=false
    user: root
    mem_limit: 1g
    restart: always
    volumes:
      - "./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro"
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - ms-service

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: elasticsearch
    environment:
      discovery.type: single-node
    expose:
      - "9200"
    # ports:
    #   - "9200:9200"
    networks:
      - ms-service

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.1
    container_name: kibana
    volumes:
      - "./kibana.yml:/usr/share/kibana/config/kibana.yml"
    restart: always
    ports:
      - "5601:5601"
    networks:
      - ms-service
    depends_on:
      - elasticsearch
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:5601"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5

  logstash:
    image: docker.elastic.co/logstash/logstash:7.13.1
    container_name: logstash
    volumes:
      - "./logstash.conf:/usr/share/logstash/pipeline/logstash.conf"
    restart: always
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf
    expose:
      - "9600"
      - "7777"
    # ports:
    #   - "9600:9600"
    #   - "7777:7777"
    networks:
      - ms-service
    depends_on:
      - elasticsearch
